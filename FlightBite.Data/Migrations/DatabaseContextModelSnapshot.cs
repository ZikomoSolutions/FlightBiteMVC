// <auto-generated />
using System;
using FlightBite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightBite.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightBite.Data.Models.EnquiryMasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ATOL")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ATOL");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_email");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("contact_person");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_phone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int>("EnquiryPlatformId")
                        .HasColumnType("int")
                        .HasColumnName("enquiry_platform_id");

                    b.Property<int>("EnquiryStatusId")
                        .HasColumnType("int")
                        .HasColumnName("enquiry_status_id");

                    b.Property<string>("IATA")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IATA");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("job_title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int")
                        .HasColumnName("user_type_id");

                    b.HasKey("Id");

                    b.ToTable("EnquiryMaster");
                });

            modelBuilder.Entity("FlightBite.Data.Models.EnquiryNoteDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int>("EnquiryId")
                        .HasColumnType("int")
                        .HasColumnName("enquiry_id");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("EnquiryNoteDetail");
                });

            modelBuilder.Entity("FlightBite.Data.Models.EnquiryPlatformModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("EnquityPlatform");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3251),
                            Description = "-",
                            Name = "Google",
                            UpdatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3252)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3258),
                            Description = "-",
                            Name = "Brochure",
                            UpdatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3258)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3260),
                            Description = "-",
                            Name = "Other",
                            UpdatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3261)
                        });
                });

            modelBuilder.Entity("FlightBite.Data.Models.EnquiryStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("EnquiryStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3384),
                            Status = "Is Processing",
                            UpdatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3385)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3387),
                            Status = "Complete",
                            UpdatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3387)
                        });
                });

            modelBuilder.Entity("FlightBite.Data.Models.UserTypesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("UserType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3401),
                            Description = "-",
                            Type = "Supplier",
                            UpdatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3401)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3405),
                            Description = "-",
                            Type = "Agent",
                            UpdatedAt = new DateTime(2023, 8, 17, 13, 46, 39, 570, DateTimeKind.Local).AddTicks(3406)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
